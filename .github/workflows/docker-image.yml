name: Golang APP CI

on:
  push:
    branches: [ "main", "dev" ]
    tags: \d{1,2}\.\d{1,2}\.\d{1,2}
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test golang API
      run: gofmt -e main.go
      
    - name: Notify slack fail
      if: always()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      uses: ravsamhq/notify-slack-action@v2
      with:
        channel_id: C0468AG5E77
        notify_when: 'failure'
        status: FAILED
        color: danger
  
  
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Login to Dockerhub
      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Tagging image
      run: tag = $(git rev-parse --short "$GITHUB_SHA")
    - name: Building image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:$tag .
#     - name: Tag definition
#     - run: if [[ ${GITHUB_REF#refs/heads/} == "main" ]]; then
#              tag="latest"
#              echo "Running on default branch ${GITHUB_REF#refs/heads/} tag = 'latest'"
#            else
#              tag=$(git rev-parse --short "$GITHUB_SHA")
#              echo "Running on branch ${GITHUB_REF#refs/heads/} tag = $tag"
#            fi
    - name: Pushing to Dockerhub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:$tag
      
    - name: Notify slack fail
      if: always()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      uses: ravsamhq/notify-slack-action@v2
      with:
        status: ${{ job.status }}
        notify_when: 'failure'


